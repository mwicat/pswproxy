from BaseHTTPServer import BaseHTTPRequestHandler

class ProxyRequestHandler(BaseHTTPRequestHandler):

    def do_request(self, body=None):
        host = self.headers.getheader('Host')
        self.headers['Accept-Encoding'] = ''
        hdrs = dict(self.headers)

        fetcher = self.server.fetcher
        replacer = self.server.replacer
        logger = self.server.logger
        filter = self.server.reqfilter

        passed = filter.check(self.path)
        logger.log(self.path, passed)
        if passed:
            response = fetcher.fetch(host, self.path, body, hdrs)
            response = replacer.replace(response)
            self._handle_response(response)
        else:
            self._handle_deny()

    def do_GET(self):
        self.do_request()
    
    def do_POST(self):
        body = self.rfile
        self.do_request(body)

    def _handle_deny(self):
        pass

    def _handle_response(self, response):
        self.send_response(response.status, response.reason)
        headers = response.headers
        self.wfile.write(str(response.headers))
        self.end_headers()
        body = response.read()
        self.wfile.write(body)
